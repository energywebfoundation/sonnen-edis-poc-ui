import * as GeneralLib from 'ew-utils-general-lib';
export interface DemandOffchainproperties {
    timeframe: GeneralLib.TimeFrame;
    pricePerCertifiedWh: number;
    currency: GeneralLib.Currency;
    productingAsset?: number;
    consumingAsset?: number;
    locationCountry?: string;
    locationRegion?: string;
    assettype?: GeneralLib.AssetType;
    minCO2Offset?: number;
    otherGreenAttributes?: string;
    typeOfPublicSupport?: string;
    targetWhPerPeriod: number;
    registryCompliance?: GeneralLib.Compliance;
}
export interface DemandOnChainProperties extends GeneralLib.BlockchainDataModelEntity.OnChainProperties {
    demandOwner: string;
}
export declare const getDemandListLength: (configuration: GeneralLib.Configuration.Entity) => Promise<number>;
export declare const createDemand: (demandPropertiesOnChain: DemandOnChainProperties, demandPropertiesOffChain: DemandOffchainproperties, configuration: GeneralLib.Configuration.Entity) => Promise<Entity>;
export declare class Entity extends GeneralLib.BlockchainDataModelEntity.Entity implements DemandOnChainProperties {
    offChainProperties: DemandOffchainproperties;
    propertiesDocumentHash: string;
    url: string;
    demandOwner: string;
    initialized: boolean;
    configuration: GeneralLib.Configuration.Entity;
    constructor(id: string, configuration: GeneralLib.Configuration.Entity);
    getUrl(): string;
    sync(): Promise<Entity>;
}
