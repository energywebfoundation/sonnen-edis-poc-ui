import { GeneralFunctions, SpecialTx, SearchLog } from './GeneralFunctions';
import Web3 = require('web3');
export declare class MarketDB extends GeneralFunctions {
    web3: Web3;
    buildFile: {
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "bytecode": string;
        "contractName": string;
        "deployedBytecode": string;
        "source": string;
        "networks": string;
    };
    constructor(web3: Web3, address?: string);
    getAllLogChangeOwnerEvents(eventFilter?: SearchLog): Promise<any>;
    getAllEvents(eventFilter?: SearchLog): Promise<any>;
    getAllAgreementListLengthDB(txParams?: SpecialTx): Promise<any>;
    getDemand(_demandId: number, txParams?: SpecialTx): Promise<any>;
    setMatcherPropertiesAndURL(_agreementId: number, _matcherPropertiesDocumentHash: string, _matcherDBURL: string, txParams?: SpecialTx): Promise<any>;
    createSupply(_propertiesDocumentHash: string, _documentDBURL: string, _assetId: number, txParams?: SpecialTx): Promise<any>;
    setAgreementMatcher(_agreementId: number, _matchers: string[], txParams?: SpecialTx): Promise<any>;
    getAgreementDB(_agreementId: number, txParams?: SpecialTx): Promise<any>;
    getAllSupplyListLength(txParams?: SpecialTx): Promise<any>;
    createDemand(_propertiesDocumentHash: string, _documentDBURL: string, _demandOwner: string, txParams?: SpecialTx): Promise<any>;
    approveAgreementSupplyDB(_agreementId: number, txParams?: SpecialTx): Promise<any>;
    owner(txParams?: SpecialTx): Promise<any>;
    changeOwner(_newOwner: string, txParams?: SpecialTx): Promise<any>;
    approveAgreementDemandDB(_agreementId: number, txParams?: SpecialTx): Promise<any>;
    createAgreementDB(_propertiesDocumentHash: string, _documentDBURL: string, _matcherPropertiesDocumentHash: string, _matcherDBURL: string, _demandId: number, _supplyId: number, txParams?: SpecialTx): Promise<any>;
    getSupply(_supplyId: number, txParams?: SpecialTx): Promise<any>;
    getAllDemandListLength(txParams?: SpecialTx): Promise<any>;
}
